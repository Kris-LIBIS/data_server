- name: 'Exporter'
  stage: 'PostIngest'
  class_name: 'Libis::Ingester::Exporter'
  description: 'Exports the information about ingested data to a file for further processing by other tools.'
  help: "This task will create a file for the run that contains information about each IntellectualEntity and Collection
        object that was created in Rosetta by the ingester. All export files will be created in the directory named by
        the 'export_dir' parameter. The file name is by default derived from the ingest run name, but can be set
        explicitly with the 'export_file_name' parameter.

        The 'export_mail' parameter is filled in, it is expected to contain a comma-separated list of email addresses
        to send the export file to. The export file will be sent as an email attachment and still needs to be created
        and will remain on disk until removed. The preivous parameters need therefore be filled in for this to work.

        The export file format default to tab delimited values and can be choosen with the 'export_format' parameter.
        Besides the formentioned TSV format, CSV, XML and YAML formats are supported. For TSV and CSV file formats, the
        user has the option to include a header line or not by setting the 'export_header' parameter to true or false.

        The export file needs to contain at least a 'key' field for each IE or Collection, but other fields can be
        added. The export file will contain the key field, the PID of the IE or Collection, a URL to access the object
        and the extra fields.

        By default, the key fiels is defined as the object's name, but can be overwritten with the 'export_key'
        parameter. The value is a Ruby expression that will be evaluated at run-time. Extra field need to be defined in
        the 'extra_keys' parameter. It needs to contain a Hash with header names as keys and corresponding Ruby
        expressions as values.

        By default, the Collection information is not exported. If this is needed the standard parameter 'item_types'
        needs to be expanded with the Collection class name ('Libis::Ingester::Collection')."
  parameters:
    export_dir:
      data_type: 'string'
      description: "Directory where the export files will be copied."
    export_file_name:
      data_type: 'string'
      description: 'File name of the export file (default: derived from ingest run name).'
    mail_to:
      data_type: 'string'
      description: 'E-mail address (or comma-separated list of addresses) to send report to.'
    mail_cc:
      data_type: 'string'
      description: 'E-mail address (or comma-separated list of addresses) to send report to in cc.'
    export_key:
      data_type: 'string'
      default: 'item.name'
      description: 'Expression to collect the key value for the export file.'
    extra_keys:
      data_type: 'hash'
      default: {}
      description: 'List of extra keys to add to the export file.'
    export_format:
      data_type: 'string'
      constraint: ['tsv', 'csv', 'xml', 'yml']
      default: 'tsv'
      description: 'Format of the export file.'
    export_header:
      data_type: 'bool'
      default: true
      description: 'Add header line to export file.'
